2.6 Learning Journal

Exercise 2.6: User Authentication in Django

Reflection Questions

1. In your own words, write down the importance of incorporating authentication into an application. You can take an example application to explain your answer. 

The importance of incorporating authentication into an application is to ensure that only authorized users can access sensitive or restricted parts of the application. Authentication enhances security and privacy, protecting user data and preventing unauthorized access.
For example, in a banking application, authentication ensures that only account holders with valid credentials can view their account balance, transfer funds, or perform financial transactions. Without authentication, anyone could access sensitive financial information, leading to potential security breaches and privacy violations.


2. In your own words, explain the steps you should take to create a login for your Django web application. 

- Design a Login Template: Create an HTML template that displays the login form. This template should include input fields for the username and password, as well as a submit button.
- Register the Login View and Define URL: In the project, register the login view and map it to a URL route. This URL should be accessible from the homepage.
- Provide a Login Link or Button: On the homepage, add a button that routes users to the authentication form (the URL you defined in the previous step).
- Secure Protected Pages: Identify which pages or views in the application require authentication. For the class views of this application, use int “loginRequiredMixin import from Django.contrib.auth.mixins. When an unauthenticated user tries to access a protected page, they will be redirected to the login page.
- Redirect After Successful Login: Configure the login view to redirect users to the recipes list view.



3. Look up the following three Django functions on Django’s official documentation and/or other trusted sources and write a brief description of each.


	
authenticate():
This function is used for user authentication in Django. It takes a username and password as arguments and returns a User object if the credentials are valid, or None if not. You can also pass optional keyword arguments to specify the authentication backend.

redirect():
The redirect function is used to perform HTTP redirects in Django. It takes a URL (the destination) as its first argument and returns an HttpResponseRedirect to that URL. You can also use additional arguments and keyword arguments to customize the redirect response.

include():
include is used to include URLs from other URL configuration modules. It allows you to modularize your URL routing by including URL patterns defined in other Python modules.
